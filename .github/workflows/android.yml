name: Android CI

on:
  workflow_dispatch:
    inputs:
      release_notes:
        type: string
        required: true
        default: 'WaterTracker Debug build to distribute on Firebase app distribution'
        description: 'Release Notes'
      version_name:
        type: number
        required: true
        default: '1.0'
        description: 'Version Name (e.g., 1.0)'
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build

    - name: Build with Gradle (Release APK)
      # Use 'assembleRelease' for a signed release APK (if signing config is in build.gradle)
      # Or 'assembleDebug' for a debug APK.
      run: ./gradlew assembleRelease

    - name: Upload Release APK
      uses: actions/upload-artifact@v4 # Use v4 for newer features and better performance
      with:
        name: app-release-apk
        # This path is common. Adjust if your project structure or build flavors change it.
        # Check your app/build/outputs/apk/release/ directory after a successful build locally
        # to confirm the exact file name (e.g., app-release-unsigned.apk or app-release.apk)
        path: composeApp/build/outputs/apk/release/app-release.apk
        # If your APK is not yet signed by Gradle (e.g., you sign it later), it might be:
        # path: app/build/outputs/apk/release/app-release-unsigned.apk
        
        # Optional: You can upload debug APK too
    - name: Build with Gradle (Debug APK)
      run: ./gradlew assembleDebug

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: composeApp/build/outputs/apk/debug
